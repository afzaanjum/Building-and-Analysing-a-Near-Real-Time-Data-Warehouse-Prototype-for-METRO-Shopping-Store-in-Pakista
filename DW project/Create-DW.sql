-- 1. Create the Metro_DW database
DROP DATABASE IF EXISTS Metro_DW;

CREATE DATABASE Metro_DW;

USE Metro_DW;

-- 2. Drop existing tables if they exist
DROP TABLE IF EXISTS SALES_FACT;
DROP TABLE IF EXISTS CUSTOMERS_DIM;
DROP TABLE IF EXISTS PRODUCTS_DIM;
DROP TABLE IF EXISTS SUPPLIER_DIM;
DROP TABLE IF EXISTS STORES_DIM;
DROP TABLE IF EXISTS FACT_TRANSACTION_OUTPUT;


-- Creating Dimensions
-- 3. Create the `Customer_Dimension` table to store the customer information
CREATE TABLE CUSTOMERS_DIM 
(
    CUSTOMER_ID INT PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(255),
    GENDER VARCHAR(10)
);

-- 4. Create the `Product_Dimension` table to store the product information
CREATE TABLE PRODUCTS_DIM 
(
    PRODUCT_ID INT PRIMARY KEY,
    PRODUCT_NAME VARCHAR(255),
    PRODUCT_PRICE DECIMAL(10, 2),
    SUPPLIER_ID INT,
    SUPPLIER_NAME VARCHAR(255),
    STORE_ID INT,
    STORE_NAME VARCHAR(255)
);

-- 5. Create the `Supplier_Dimension` table to store the supplier information
CREATE TABLE SUPPLIER_DIM 
(
    SUPPLIER_ID INT PRIMARY KEY,
    SUPPLIER_NAME VARCHAR(255)
);

-- 6. Create the `Store_Dimension` table to store the store information
CREATE TABLE STORES_DIM 
(
    STORE_ID INT PRIMARY KEY,
    STORE_NAME VARCHAR(255)
);


-- 8. Load data into the CUSTOMER_DIM table (replace with actual file paths)
LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/customers_data.csv'
IGNORE
INTO TABLE CUSTOMERS_DIM
FIELDS TERMINATED BY ',' ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(CUSTOMER_ID, CUSTOMER_NAME, GENDER);

-- 9. Load data into the PRODUCTS_DIM table (replace with actual file paths)
LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/products_data.csv'
IGNORE
INTO TABLE PRODUCTS_DIM
FIELDS TERMINATED BY ',' ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(PRODUCT_ID, PRODUCT_NAME, PRODUCT_PRICE, SUPPLIER_ID, SUPPLIER_NAME, STORE_ID, STORE_NAME);

INSERT INTO STORES_DIM (STORE_ID, STORE_NAME)
SELECT DISTINCT STORE_ID, STORE_NAME
FROM PRODUCTS_DIM;

INSERT IGNORE INTO SUPPLIER_DIM (SUPPLIER_ID, SUPPLIER_NAME)
SELECT DISTINCT SUPPLIER_ID, SUPPLIER_NAME
FROM PRODUCTS_DIM;



-- 10. Create the `FACT_TRANSACTION_OUTPUT` table to store the transactions (Aggregated)
CREATE TABLE FACT_TRANSACTION_OUTPUT (
    CUSTOMER_ID INT,
    CUSTOMER_NAME VARCHAR(255),
    GENDER VARCHAR(50),
    PRODUCT_ID INT,
    PRODUCT_NAME VARCHAR(255),
    PRICE DOUBLE,
    SUPPLIER_ID INT,
    SUPPLIER_NAME VARCHAR(255),
    STORE_ID INT,
    STORE_NAME VARCHAR(255),
    ORDER_ID INT,
    ORDER_DATE DATETIME,
    QUANTITY_ORDERED INT,
    TOTAL_SALES DOUBLE
);


SELECT COUNT(*) FROM FACT_TRANSACTION_OUTPUT;
SELECT * FROM FACT_TRANSACTION_OUTPUT LIMIT 10;

select * from STORES_DIM limit 10;
Select * from SUPPLIER_DIM limit 10;







